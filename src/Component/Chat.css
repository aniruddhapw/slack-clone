.chat {
    flex: 0.7;
    flex-grow: 1;
    overflow-y: scroll;
    padding-bottom: 150px;
}

.chat__header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 20px;
    border-bottom: 1px solid lightgray;
}

.chat__channelName {
    display: flex;
    text-transform: lowercase;
}

.chat__channelName>.MuiSvgIcon-root {
    margin-left: 10px;
    font-size: 18px;
}
.chat__headerRight{
    display: flex;
    
    align-items: center;
}
.delete_btn{
    margin-left: 10px;
    cursor: pointer;
    display: flex;
    
    align-items: center;
    
}
.delete_tooltip{
    visibility: hidden;

    
}

.chat__headerRight>p {
    display: flex;
    align-items: center;
    font-size: 14px;
}

.chat__headerRight>p>.MuiSvgIcon-root {
    margin-right: 5px !important;
    font-size: 16px;
}
/* tooltip */

tool-tip {
    --_p-inline: 1.5ch;
    --_p-block: .75ch;
    --_triangle-size: 7px;
    --_bg: hsl(0 0% 20%);
    --_shadow-alpha: 50%;
  
    --_bottom-tip: conic-gradient(from -30deg at bottom, rgba(0,0,0,0), #000 1deg 60deg, rgba(0,0,0,0) 61deg) bottom / 100% 50% no-repeat;
    --_top-tip: conic-gradient(from 150deg at top, rgba(0,0,0,0), #000 1deg 60deg, rgba(0,0,0,0) 61deg) top / 100% 50% no-repeat;
    --_right-tip: conic-gradient(from -120deg at right, rgba(0,0,0,0), #000 1deg 60deg, rgba(0,0,0,0) 61deg) right / 50% 100% no-repeat;
    --_left-tip: conic-gradient(from 60deg at left, rgba(0,0,0,0), #000 1deg 60deg, rgba(0,0,0,0) 61deg) left / 50% 100% no-repeat;
  
    pointer-events: none;
    user-select: none;
  
    opacity: 0;
    transform: translateX(var(--_x, 0)) translateY(var(--_y, 0));
    transition: opacity .2s ease, transform .2s ease;
  
    position: absolute;

    
    
    z-index: 1;
    inline-size: max-content;
    max-inline-size: 25ch;
    text-align: start;
    font-size: 1rem;
    font-weight: normal;
    line-height: normal;
    line-height: initial;
    padding: var(--_p-block) var(--_p-inline);
    margin: 0;
    border-radius: 5px;
    background: var(--_bg);
    color: CanvasText;
    will-change: filter;
    filter:
      drop-shadow(0 3px 3px hsl(0 0% 0% / var(--_shadow-alpha)))
      drop-shadow(0 12px 12px hsl(0 0% 0% / var(--_shadow-alpha)));
  }
  
  /* create a stacking context for elements with > tool-tips */
  :has(> tool-tip) {
    position: relative;
  }
  
  /* when those parent elements have focus, hover, etc */
  :has(> tool-tip):is(:hover, :focus-visible, :active) > tool-tip {
    opacity: 1;
    transition-delay: 200ms;
  }
  
  /* prepend some prose for screen readers only */
  tool-tip::before {
    content: "; Has tooltip: ";
    clip: rect(1px, 1px, 1px, 1px);
    clip-path: inset(50%);
    height: 1px;
    width: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
  }
  
  /* tooltip shape is a pseudo element so we can cast a shadow */
  tool-tip::after {
    content: "";
    background: var(--_bg);
    position: absolute;
    z-index: -1;
    inset: 0;
    mask: var(--_tip);
  }
  
  /* top tooltip styles */
  tool-tip:is(
    [tip-position="top"],
    [tip-position="block-start"],
    :not([tip-position]),
    [tip-position="bottom"],
    [tip-position="block-end"]
  ) {
    text-align: center;
  }
  tool-tip:is([tip-position="top"], [tip-position="block-start"], :not([tip-position])) {
    inset-inline-start: 50%;
    inset-block-end: calc(100% + var(--_p-block) + var(--_triangle-size));
    --_x: calc(50% * var(--isRTL));
  }
  
  tool-tip:is([tip-position="top"], [tip-position="block-start"], :not([tip-position]))::after {
    --_tip: var(--_bottom-tip);
    inset-block-end: calc(var(--_triangle-size) * -1);
    border-block-end: var(--_triangle-size) solid transparent;
  }

  @media (prefers-color-scheme: light) {
    tool-tip {
      --_bg: white;
      --_shadow-alpha: 15%;
    }
  }


